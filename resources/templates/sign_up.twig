{% extends 'layout.twig' %}

{% block title %}{{ lang.signup_title }}{% endblock %}

{% block content %}
    <div class="row d-flex justify-content-center">
        <div class="col-lg-8 col-lg-offset-2">
            <div class="text-center mb-4">
                <img class="mb-4" src="/static/favicon/android-chrome-192x192.png" width="72" height="72" alt="Logo">
                <h3 class="h3" style="margin-top: -30px;">{{ cfg.project_title }} - {{ lang.signup_title }}</h3>
                <small>{{ lang.required_fields_info }}</small>
            </div>

            <form id="form-signup" method="post" role="form" enctype="multipart/form-data">
                <div class="controls">
                    <div class="row">
                        {# имя #}
                        <div class="col-md-6">
                            <div class="form-group">
                                <label for="form_name">{{ lang.auth_firstname }} *</label>
                                <input id="form_name" type="text" name="name" class="form-control"
                                       placeholder="{{ lang.auth_firstname_placeholder }}" required="required"
                                       data-error="{{ lang.auth_firstname_dataerror }}" autocomplete="firstname"
                                       value="{{ POST.name }}">
                                <div class="help-block "></div>
                            </div>
                        </div>

                        {# фамилия #}
                        <div class="col-md-6">
                            <div class="form-group">
                                <label for="form_lastname">{{ lang.auth_lastname }} *</label>
                                <input id="form_lastname" type="text" name="surname" class="form-control"
                                       placeholder="{{ lang.auth_lastname_placeholder }}" required="required"
                                       data-error="{{ lang.auth_lastname_dataerror }}" autocomplete="surname"
                                       value="{{ POST.surname }}">
                                <div class="help-block "></div>
                            </div>
                        </div>
                    </div>

                    {# пароль и проверка пароля #}
                    <div class="row">
                        <div class="col-md-6">
                            <div class="form-group">
                                <label for="form_password">{{ lang.auth_password }} *</label>
                                <input type="password" id="form_password"
                                       placeholder="{{ lang.auth_password_placeholder }}" name="password" minlength="8"
                                       data-error="{{ lang.auth_password_dataerror }}" autocomplete="new-password"
                                       class="form-control" required="required">
                                <div class="help-block "></div>
                            </div>
                        </div>

                        <div class="col-md-6">
                            <div class="form-group">
                                <label for="form_password_confirm">{{ lang.auth_password_confirm }} *</label>
                                <input type="password" id="form_password_confirm"
                                       placeholder="{{ lang.auth_password_confirm_placeholder }}"
                                       name="password_confirm" minlength="8"
                                       data-error="{{ lang.auth_password_confirm_dataerror }}"
                                       autocomplete="new-password-confirm"
                                       class="form-control" required="required">
                                <div class="help-block "></div>
                            </div>
                        </div>
                    </div>

                    <div class="row">
                        {# email #}
                        <div class="col-md-6">
                            <div class="form-group">
                                <label for="form_email">{{ lang.auth_email }} *</label>
                                <input id="form_email" type="email" name="email" class="form-control"
                                       placeholder="{{ lang.auth_email_placeholder }}" required="required"
                                       data-error="{{ lang.auth_email_dataerror }}" autocomplete="email"
                                       value="{{ POST.email }}">
                                <div class="help-block"></div>
                            </div>
                        </div>

                        <div class="col-md-6">
                            <label>{{ lang.auth_user_avatar }} *</label>
                            <div class="form-group custom-file">
                                <label class="custom-file-label" for="form_avatar" id="form_avatar_choice"
                                       data-rechoice-text="{{ lang.auth_user_avatar_rechoiche }}">
                                    {{ lang.auth_user_avatar_choice }}</label>
                                <input type="file" id="form_avatar" class="custom-file-input"
                                       accept="image/x-png,image/gif,image/jpeg" required="required">
                                <div class="help-block"></div>
                            </div>
                        </div>
                    </div>

                    <div class="row">
                        {% if cfg.use_recaptcha %}
                            <div class="col-md-6">
                                <div class="form-group">
                                    {{ RECAPTCHA_BLOCK|raw }}
                                </div>
                            </div>
                        {% endif %}
                    </div>

                    <div class="row">
                        <div class="col-md-6">
                            <button type="submit" class="btn btn-sm btn-primary btn-send">
                                <i class="fa fa-check"></i>
                                {{ lang.auth_btn_register }}
                            </button>
                            <button type="reset" id="btn_reset_form" class="btn btn-sm btn-success btn-reset">
                                <i class="fa fa-repeat"></i>
                                {{ lang.auth_btn_reset }}
                            </button>
                        </div>
                    </div>
                </div>

                {# поле для хранения DataURL кропнутой картинки пользователя #}
                <input type="hidden" id="user_avatar_image_data" name="user_avatar" value="{{ POST.user_avatar }}">
                <input type="hidden" name="act" value="register">
            </form>
        </div>
    </div>

    {% include 'blocks/img_crop_modal.twig' %}
{% endblock %}

{% block js %}
    {% if cfg.use_recaptcha %}
        <script src="https://www.google.com/recaptcha/api.js" async defer></script>
    {% endif %}
    <script src="https://cdnjs.cloudflare.com/ajax/libs/cropperjs/1.5.6/cropper.min.js"
            integrity="sha256-EuV9YMxdV2Es4m9Q11L6t42ajVDj1x+6NZH4U1F+Jvw=" crossorigin="anonymous"></script>

    <script>
        {# Документ полностью загружен #}
        $(document).ready(function () {
            let cropper;

            // при выборе файла изображения обрезать его!
            let select_image = function (e) {
                let img = e.target.files[0];

                if (!img.type.match('image.*')) { // проверка формата файла, только изображения можно
                    alert("{{ lang.image_format_error }}");
                    return;
                }

                let reader = new FileReader();
                reader.onload = function (e) {
                    if (cropper) // уничтожить кроппер, если он уже есть
                        cropper.destroy();

                    $('#cropper_image').attr('src', e.target.result);
                    cropper = new Cropper(document.getElementById('cropper_image'), {
                        viewMode: 1
                    });
                    $('#modal_cropper').modal();
                };
                reader.readAsDataURL(img); // попробовать считать изображение
                // изменить описание поля выбора изображения
                $('#form_avatar_choice').text($('#form_avatar_choice').attr('data-rechoice-text'));
                return true;
            };

            // когда выбирается какой-то файл
            $("#form_avatar").change(select_image).click(function () {
               $(this).val(''); // при нажатии сбрасывать выбранный файл, чтоб кроппер снова мог нормально сработать для того же файла
            });
            // кнопка на модальном окне обрезки изображения
            $('#btn_image_crop').click(function () {
                $('#user_avatar_image_data').val(cropper.getCroppedCanvas().toDataURL());
                cropper.destroy();
            });

            /* проверки формы! */

            /**
             * Функция проверки формата email
             */
            function validateEmail(email) {
                let re = /^(([^<>()\[\]\\.,;:\s@"]+(\.[^<>()\[\]\\.,;:\s@"]+)*)|(".+"))@((\[[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\])|(([a-zA-Z\-0-9]+\.)+[a-zA-Z]{2,}))$/;
                return re.test(String(email).toLowerCase());
            }

            /**
             * Вывод сообщения ошибки под указанным элементом
             **/
            function printElementDataError(element, data_error_message) {
                if (!element) return;
                data_error_message = data_error_message || element.attr('data-error');
                let group = element.closest('.form-group');
                group.find('.form-control').addClass('is-invalid');
                group.find('.help-block').removeClass('text-danger').
                                removeClass('text-success').addClass('text-danger').text(data_error_message);
            }

            /**
             * Очистить класс ошибки или успеха и сообщение убрать под элементом
             */
            function clearElementDataError(element) {
                let group = element.closest('.form-group');
                group.find('.help-block').removeClass('text-danger').removeClass('text-success').text('');
                group.find('.form-control').removeClass('is-valid').removeClass('is-invalid');
            }

            /**
             * Вывод сообщения успеха под указанным элементом
             */
            function printElementDataOK(element, data_ok_message) {
                clearElementDataError(element);
                if (!element) return;
                data_ok_message = data_ok_message || "";
                let group = element.closest('.form-group');
                group.find('.form-control').addClass('is-valid');
                group.find('.help-block').removeClass('text-danger').
                removeClass('text-success').addClass('text-success').text(data_ok_message);
            }

            // проверка существования email!
            function checkEmail() {
                // self request
                let email_input = $('#form_email');
                if (!validateEmail(email_input.val())) {
                    printElementDataError(email_input);
                    return; // выйти, пока не будет нормальный формат email-а
                }
                // запрос проверки занятости email-а
                $.post('', { act: "check_email", email: email_input.val() }, function (response) {
                    if (response === '1') {
                        printElementDataError(email_input, '{{ lang.auth_email_exists }}');
                    } else {
                        printElementDataOK(email_input, '{{ lang.auth_email_free }}');
                        // printElementDataOK(email_input);
                    }
                });
            }

            // при потере фокуса или при изменении сразу же можно проверить email
            $('#form_email').focusout(checkEmail);
            $('#form_name,#form_lastname').focusout(function() {
                let field = $(this);
                if (field.val().trim().length < 2) { // ладно, двухбуквенные имена существуют (типа Ян)
                    printElementDataError(field);
                } else {
                    printElementDataOK(field);
                }
            });

            function checkPasswordsMath() {
                let confirm_field = $('#form_password_confirm');
                if ($('#form_password').val() !== confirm_field.val()) {
                    printElementDataError(confirm_field);
                } else {
                    printElementDataOK(confirm_field);
                }
            }

            $('#form_password').focusout(function () {
               let field = $(this);
                if (field.val().trim().length < 8) {
                    printElementDataError(field);
                } else {
                    printElementDataOK(field);
                }
                checkPasswordsMath();
            });

            $('#form_password_confirm').focusout(checkPasswordsMath);

            /* валидация формы перед отправкой (ручная почти, да) */

            $('#form-signup').on('submit', function () {
                // поиск элементов с text-danger, где есть проблемы какие-то.
                let problem_inputs = $('input[required]').closest('.form-group').find('.text-danger');
                if (problem_inputs.length > 0) { // если есть хоть одно проблемное поле, то остановиться и в фокус его!
                    let problem_field = $(problem_inputs[0]);
                    problem_field.removeClass('text-danger').addClass('text-warning');
                    let first_field = problem_field.closest('.form-group').find('input');
                    first_field.focus();
                    return false;
                }

                // дополнительная проверка на наличие изображения
                if ($('#user_avatar_image_data').val().trim() === '') {
                    alert('{{ lang.auth_user_avatar_error }}');
                    return false;
                }

                // проверка recapthca, точнее, просто проверка, что юзер поставил флажок
                {% if cfg.use_recaptcha %}
                    if (!grecaptcha.getResponse()) {
                        alert('{{ lang.auth_recaptcha_warning }}');
                        return false;
                    }
                {% endif %}

                return true;
            });

            /* очистка формы по кнопке RESET */

            $('#btn_reset_form').click(function () {
                grecaptcha.reset(); // сброс рекапчи!
                $('input').val();   // очистка значений всех инпутов
            });

        });
    </script>
{% endblock %}

{% block css %}
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/cropperjs/1.5.6/cropper.min.css"
          integrity="sha256-cZDeXQ7c9XipzTtDgc7DML5txS3AkSj0sjGvWcdhfns=" crossorigin="anonymous"/>

{% endblock %}